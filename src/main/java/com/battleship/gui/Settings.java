package com.battleship.gui;

import com.battleship.utils.BSConfigFile;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

// TODO: Maybe it's better to create an inner class that implements ActionListener
public class Settings implements ActionListener {

    private JFrame frame;
    private JPanel panel;
    private JTextField tfNick;
    private JButton avatar_button;
    private JTextField tfWidth;
    private JTextField tfHeight;
    private JButton bSave;
    private JButton bExit;
    private JLabel labelUserName;
    private JLabel labelImage;
    private JLabel labelWRes;
    private JLabel labelHRes;


    private JComboBox<String> bSetColors;
    final String[] colorsPalette = new String[]{"BLUE", "MAGENTA", "RED", "ORANGE", "BLACK", "GREEN"};

    public Settings() {
        $$$setupUI$$$();
        initUI();
    }

    public void initUI() {

        frame = new JFrame("Settings");

        avatar_button.addActionListener(this);
        bExit.addActionListener(this);
        bSave.addActionListener(this);

        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.add(panel, BorderLayout.CENTER);
        frame.pack();
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }

    private ImageIcon loadImage(String path) {

        return new ImageIcon(path);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        Object source = e.getSource();
        if (source == bExit) {
            frame.dispose();
        } else if (source == avatar_button) {
            SwingUtilities.invokeLater(() -> new ImageChooser(avatar_button));
        } else if (source == bSave) {
            String newName = tfNick.getText();
            String setColor = (String) bSetColors.getSelectedItem();
            String resolutionWidth = tfWidth.getText();
            String resolutionHeight = tfHeight.getText();
            BSConfigFile.updateConfiguration(newName, setColor, resolutionWidth, resolutionHeight);

            frame.dispose();
        }
    }


    private void createUIComponents() {

        tfNick = new JTextField(BSConfigFile.readProperties("Name"));
        avatar_button = new JButton(loadImage(BSConfigFile.readProperties("Avatar_Path")));
        bSetColors = new JComboBox<>(colorsPalette);
        bSetColors.setSelectedItem(BSConfigFile.readProperties("Color"));
        tfWidth = new JTextField(BSConfigFile.readProperties("Resolution_Width"));
        tfHeight = new JTextField(BSConfigFile.readProperties("Resolution_Height"));
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panel = new JPanel();
        panel.setLayout(new GridLayoutManager(6, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        tfNick.setHorizontalAlignment(0);
        panel.add(tfNick, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        tfWidth.setHorizontalAlignment(0);
        panel.add(tfWidth, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        tfHeight.setHorizontalAlignment(0);
        panel.add(tfHeight, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        avatar_button.setText("");
        panel.add(avatar_button, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        bExit = new JButton();
        bExit.setText("Exit");
        panel.add(bExit, new GridConstraints(5, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        bSave = new JButton();
        bSave.setText("Save");
        panel.add(bSave, new GridConstraints(4, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        labelUserName = new JLabel();
        labelUserName.setText("UserName");
        panel.add(labelUserName, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        labelImage = new JLabel();
        labelImage.setText("User Image");
        panel.add(labelImage, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        labelWRes = new JLabel();
        labelWRes.setText("Resolution Width");
        panel.add(labelWRes, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        labelHRes = new JLabel();
        labelHRes.setHorizontalTextPosition(0);
        labelHRes.setText("Resolution Height");
        panel.add(labelHRes, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }
}
